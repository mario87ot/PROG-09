package cromosUI;

import cromos.Cromo;
import static cromosUI.Principal.jGuardar;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Mario version 14/05/2017
 *
 * Clase que permite crear una ventana para poder añadir nuevos cromos o
 * modificar un cromo ya existente en el arraylist de cromos.
 */
public class EditaCromo extends javax.swing.JDialog {

    public ArrayList<Cromo> cromos = new ArrayList();

    /**
     * Creates new form EditaCromo
     *
     * @param parent
     * @param modal
     *
     */
    public EditaCromo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jbAnyadeCromo = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jSelectImg = new javax.swing.JButton();
        jCodigo = new javax.swing.JTextField();
        jDescripcion = new javax.swing.JTextField();
        jtfRutaImagen = new javax.swing.JTextField();
        jcbRaro = new javax.swing.JCheckBox();
        spiDefensa = new javax.swing.JSpinner();
        spiAtaque = new javax.swing.JSpinner();
        spiAnyo = new javax.swing.JSpinner();
        jcbBando = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jlbFotoCromo = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta cromo");
        setLocation(new java.awt.Point(380, 100));

        jLabel1.setText("Código:");

        jLabel2.setText("Descripción:");

        jLabel3.setText("Bando:");

        jLabel4.setText("Raro");

        jLabel5.setText("Defensa:");

        jLabel6.setText("Ataque:");

        jLabel7.setText("Año de emisión:");

        jbAnyadeCromo.setText("Aceptar");
        jbAnyadeCromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnyadeCromoActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jSelectImg.setText("Seleccionar imagen");
        jSelectImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectImgActionPerformed(evt);
            }
        });

        jCodigo.setEnabled(false);

        spiDefensa.setModel(new javax.swing.SpinnerNumberModel(50, 45, 99, 1));

        spiAtaque.setModel(new javax.swing.SpinnerNumberModel(40, 35, 98, 1));

        spiAnyo.setModel(new javax.swing.SpinnerNumberModel(2016, 2010, 2016, 1));

        jcbBando.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " República", " Separatista", " Alianza", " Imperio", " Mercenario", " Primera Orden", " Resistencia" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbFotoCromo, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbFotoCromo, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfRutaImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSelectImg, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(jLabel1))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel7)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jcbRaro)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel4)))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jCodigo)
                                            .addComponent(jDescripcion)
                                            .addComponent(spiAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spiAtaque)
                                            .addComponent(spiDefensa, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                            .addComponent(jcbBando, 0, 169, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jbAnyadeCromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 405, Short.MAX_VALUE)
                                .addComponent(jbCancelar)))
                        .addGap(56, 56, 56))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcbBando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbRaro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(spiDefensa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spiAtaque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(spiAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jSelectImg))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfRutaImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbAnyadeCromo))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    static String rutaImagen;
    String ruta;//Variable para guardar la ruta de la imagen del cromo
    File fichero;//Variable para guardar la imagen del cromo

    /**
     * Si se pulsa en SELECCIONAR IMAGEN, se abrirá un JFileChooser que
     * permitirá navegar por el sistema de ficheros y seleccionar una imagen
     * para que se muestre dentro de la ventana
     *
     * @param evt
     */
    private void jSelectImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectImgActionPerformed

        //Creamos el JFileChooser
        JFileChooser fileChooser = new JFileChooser();
        //Creamos un filtro para poder visualizar archivos con extensión jpg gif y png
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & GIF & PNG", "jpg", "gif", "png");
        //Agregamos el filtro al FileChooser
        fileChooser.setFileFilter(filter);

        //Guardamos la selección (Abrir o Cancelar)
        int seleccion = fileChooser.showOpenDialog(this);

        //Si una vez elegida la imagen se ha seleccionado la opción Abrir...
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Obtenemos el fichero con la imagen
            fichero = fileChooser.getSelectedFile();
            //Obtenemos la ruta de la imagen
            rutaImagen = fileChooser.getSelectedFile().getAbsolutePath();
            //Añadimos la imagen seleccionada en el componente que la va a contener
            jlbFotoCromo.setIcon(new ImageIcon(rutaImagen));
            //Mostramos la ruta en su textfield
            jtfRutaImagen.setText(rutaImagen);

        }


    }//GEN-LAST:event_jSelectImgActionPerformed

    /**
     * Si una vez introducido los datos del cromo pulsamos en ACEPTAR ha ido
     * bien, se añadirá un cromo al arraylist. Si la descripción está vacía, no
     * se ha seleccionado ninguna imagen o no se encuentra la ruta, se avisará
     * al usuario
     *
     * @param evt
     */
    String descripcion;
    String bando;
    boolean raro;
    int defensa;
    int ataque;
    int anyoEmision;

    private void jbAnyadeCromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnyadeCromoActionPerformed
        try {
            //Buscamos primero si existe el código del cromo, para ver si va a ser un alta o una modificación
            int posicion = Principal.buscarCromo(Principal.cromos, Integer.parseInt(jCodigo.getText()));
            //Si posición es -1, es decir, que no existe un cromo con ese código y, por tanto, es un alta
            if (posicion == -1) {
                int codigo = 0;
                //Obtenemos los datos introducidos en cada campo
                descripcion = EditaCromo.jDescripcion.getText();
                bando = (String) EditaCromo.jcbBando.getSelectedItem();
                raro = EditaCromo.jcbRaro.isSelected();
                defensa = (int) EditaCromo.spiDefensa.getValue();
                ataque = (int) EditaCromo.spiAtaque.getValue();
                anyoEmision = (int) EditaCromo.spiAnyo.getValue();
                rutaImagen = EditaCromo.jtfRutaImagen.getText();

                //Si la descripción está vacía se avisa al usuario
                if (descripcion.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "La descripcion no puede estar vacía", "Atención", JOptionPane.ERROR_MESSAGE);
                    //Si no se ha seleccionado ninguna imagen o la ruta no existe, se avisa al usuario
                } else if (rutaImagen.isEmpty() || !fichero.exists()) {
                    JOptionPane.showMessageDialog(null, "No se encuentra la ruta del fichero con la imagen del cromo", "Atención", JOptionPane.ERROR_MESSAGE);
                    //Si todo ha ido bien, se añade el cromo al arraylist con los datos introducidos
                } else {
                    Cromo cromo = new Cromo(codigo, descripcion, bando, raro, defensa, ataque, anyoEmision, rutaImagen);
                    //Añadimos el cromo al arraylist
                    Principal.cromos.add(cromo);
                    //Indicamos que ha habido cambios
                    Principal.cambiosEnArray = true;
                    //Habilitamos la opción de guardar al haber habido un cambio
                    Principal.jGuardar.setEnabled(true);
                    //Avisamos que se ha añadido un cromo
                    JOptionPane.showMessageDialog(null, "Se ha añadido un cromo", "Atención", 1);
                    //Liberamos de memoria el formulario
                    this.dispose();
                }
                //Si existe el cromo con ese código, quiere decir que es una modificación y no un alta nueva
            } else {

                //Obtenemos los datos modificados
                Principal.cromos.get(posicion).setDescripcion(this.jDescripcion.getText());
                Principal.cromos.get(posicion).setBando(String.valueOf(this.jcbBando.getSelectedItem()));
                Principal.cromos.get(posicion).setRaro(this.jcbRaro.isSelected());
                Principal.cromos.get(posicion).setDefensa((int) this.spiDefensa.getValue());
                Principal.cromos.get(posicion).setAtaque((int) this.spiAtaque.getValue());
                Principal.cromos.get(posicion).setAnyoEmision((int) this.spiAnyo.getValue());
                Principal.cromos.get(posicion).setRutaImagen(this.jtfRutaImagen.getText());

                //Indicamos que ha habido cambios
                Principal.cambiosEnArray = true;
                //Avisamos de que el cromo ha sido modificado
                JOptionPane.showMessageDialog(null, "Se ha modificado el cromo", "Atención", JOptionPane.INFORMATION_MESSAGE);

                //Habilitamos la opción de guardar al haber habido un cambio
                jGuardar.setEnabled(true);

                //Liberamos de memoria el formulario
                this.dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se ha podido añadir el cromo, revise los datos", "Atención", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAnyadeCromoActionPerformed

    /**
     * Si se pulsa en CANCELAR, se cerrará la ventana
     *
     * @param evt
     */
    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed

        this.setVisible(false);

    }//GEN-LAST:event_jbCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField jCodigo;
    public static javax.swing.JTextField jDescripcion;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jSelectImg;
    public static javax.swing.JButton jbAnyadeCromo;
    private javax.swing.JButton jbCancelar;
    public static javax.swing.JComboBox<String> jcbBando;
    public static javax.swing.JCheckBox jcbRaro;
    public static javax.swing.JLabel jlbFotoCromo;
    public static javax.swing.JTextField jtfRutaImagen;
    public static javax.swing.JSpinner spiAnyo;
    public static javax.swing.JSpinner spiAtaque;
    public static javax.swing.JSpinner spiDefensa;
    // End of variables declaration//GEN-END:variables

}
