package cromosUI;

import cromos.ComparadorDescripcionAscendente;
import cromos.ComparadorDescripcionDescendente;
import cromos.Cromo;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario version 14/05/2017
 *
 * Clase para poder listar los datos de los cromos en una ventana. Tendrá
 * ociones para listar tanto ascendente como descendentemente según la
 * descripción del cromo. Se podrá ver la información de cada cromo de forma de
 * individual seleccionándolo una vez listado y pulsando en Ver información.
 * También mostrará el total de cromos que haya almacenados en el araylist en
 * ese momento.
 */
public class ListarCromos extends javax.swing.JDialog {

    private static ArrayList<Cromo> cromos = new ArrayList<>();

    /**
     * Creates new form ListarCromos
     *
     * @param parent
     * @param modal
     * @param listaCromos
     */
    public ListarCromos(java.awt.Frame parent, boolean modal, ArrayList<Cromo> listaCromos) {
        super(parent, modal);

        initComponents();

        //Colocamos el jdialog en el centro
        setLocationRelativeTo(null);

       
        //Referencia a la lista de cromos para obtener los cromos
        ListarCromos.cromos = listaCromos;

         String totalCromos = String.valueOf(Cromo.totalCromos);
        ListarCromos.jtfTotalCromos.setText(totalCromos);
        Collections.sort(ListarCromos.cromos, new ComparadorDescripcionAscendente());
        int tamano = ListarCromos.cromos.size();
        final String vect[] = new String[tamano];
        for (int i = 0; i < tamano; i++) {
            vect[i] = ListarCromos.cromos.get(i).getCodigo() + " -- " + ListarCromos.cromos.get(i).getDescripcion() + " -- "
                    + ListarCromos.cromos.get(i).getBando();
        }

        jListaCromos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = vect;

            @Override
            public int getSize() {
                return strings.length;
            }

            @Override
            public Object getElementAt(int i) {
                return strings[i];
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgDescripcion = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jVerInfo = new javax.swing.JButton();
        jbCerrarListado = new javax.swing.JButton();
        jrbAscendente = new javax.swing.JRadioButton();
        jrbDescendente = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtfTotalCromos = new javax.swing.JTextField();
        jtaDescripcion = new javax.swing.JScrollPane();
        jListaCromos = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de cromos");

        jLabel1.setText("Cromos(Código--Descripción--Bando)");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Ordenar por:");

        jVerInfo.setText("Ver información");
        jVerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVerInfoActionPerformed(evt);
            }
        });

        jbCerrarListado.setText("Cerrar listado");
        jbCerrarListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerrarListadoActionPerformed(evt);
            }
        });

        bgDescripcion.add(jrbAscendente);
        jrbAscendente.setSelected(true);
        jrbAscendente.setText("Descripción (A-Z)");
        jrbAscendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAscendenteActionPerformed(evt);
            }
        });

        bgDescripcion.add(jrbDescendente);
        jrbDescendente.setText("Descripción (Z-A)");
        jrbDescendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbDescendenteActionPerformed(evt);
            }
        });

        jLabel3.setText("Totales");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Total de cromos:");

        jtfTotalCromos.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(52, 52, 52)
                .addComponent(jtfTotalCromos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 84, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfTotalCromos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jtaDescripcion.setViewportView(jListaCromos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jVerInfo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbCerrarListado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jrbAscendente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbDescendente)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jtaDescripcion)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtaDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbAscendente)
                    .addComponent(jrbDescendente))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jVerInfo)
                        .addGap(27, 27, 27)
                        .addComponent(jbCerrarListado))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Si se pulsa CERRAR LISTADO, se cerrará la ventana
     *
     * @param evt
     */
    private void jbCerrarListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerrarListadoActionPerformed

        this.setVisible(false);

    }//GEN-LAST:event_jbCerrarListadoActionPerformed

    /**
     * Si seleccionamos un cromo de la lista y pulsamos en VER INFORMACIÓN, se
     * nos mostrará los datos de ese cromo. Si no hay ninguno seleccionado
     * cuando se pulsa en Ver información, se avisará al usuario
     *
     * @param evt
     */
    private void jVerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVerInfoActionPerformed
        if (this.jListaCromos.getSelectedIndex() >= 0) {
            //Mostramos los datos del cromo seleccionado si se pulsa en Ver información
            JOptionPane.showMessageDialog(null, ListarCromos.cromos.get(this.jListaCromos.getSelectedIndex()),
                    "Datos", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "No hay ningún cromo seleccionado.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jVerInfoActionPerformed

    /**
     * Si se pulsa en el botón radio DESCRIPCIÓN (A-Z), se ordenarán los cromos
     * de forma ascendente (de la A a la Z) según la descripción, es decir, si
     * un cromo tiene como descripción Adam y otro Brand, aparecería primero
     * Adam y después Brand
     *
     * @param evt
     */
    private void jrbAscendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAscendenteActionPerformed

        String totalCromos = String.valueOf(Cromo.totalCromos);
        ListarCromos.jtfTotalCromos.setText(totalCromos);
        Collections.sort(ListarCromos.cromos, new ComparadorDescripcionAscendente());
        int tamano = ListarCromos.cromos.size();
        final String vect[] = new String[tamano];
        for (int i = 0; i < tamano; i++) {
            vect[i] = ListarCromos.cromos.get(i).getCodigo() + " -- " + ListarCromos.cromos.get(i).getDescripcion() + " -- "
                    + ListarCromos.cromos.get(i).getBando();
        }

        jListaCromos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = vect;

            @Override
            public int getSize() {
                return strings.length;
            }

            @Override
            public Object getElementAt(int i) {
                return strings[i];
            }
        });
    }//GEN-LAST:event_jrbAscendenteActionPerformed

    /**
     * Si se pulsa en el botón radio DESCRIPCIÓN (Z-A), se ordenarán los cromos
     * de forma descendente (de la Z a la A) según la descripción, es decir, si
     * un cromo tiene como descripción Adam y otro Brand, aparecería primero
     * Brand y después Adam
     *
     * @param evt
     */
    private void jrbDescendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbDescendenteActionPerformed

        String totalCromos = String.valueOf(Cromo.totalCromos);
        ListarCromos.jtfTotalCromos.setText(totalCromos);
        Collections.sort(ListarCromos.cromos, new ComparadorDescripcionDescendente());
        int tamano = ListarCromos.cromos.size();
        final String vect[] = new String[tamano];
        for (int i = 0; i < tamano; i++) {
            vect[i] = ListarCromos.cromos.get(i).getCodigo() + " -- " + ListarCromos.cromos.get(i).getDescripcion() + " -- "
                    + ListarCromos.cromos.get(i).getBando();
        }

        jListaCromos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = vect;

            @Override
            public int getSize() {
                return strings.length;
            }

            @Override
            public Object getElementAt(int i) {
                return strings[i];
            }
        });


    }//GEN-LAST:event_jrbDescendenteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgDescripcion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListaCromos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jVerInfo;
    private javax.swing.JButton jbCerrarListado;
    private javax.swing.JRadioButton jrbAscendente;
    private javax.swing.JRadioButton jrbDescendente;
    private static javax.swing.JScrollPane jtaDescripcion;
    public static javax.swing.JTextField jtfTotalCromos;
    // End of variables declaration//GEN-END:variables
}
